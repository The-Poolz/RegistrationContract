{
  "contractName": "FeeBaseHelper",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "NewFeeAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "OldFeeAmount",
          "type": "uint256"
        }
      ],
      "name": "NewFeeAmount",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "NewFeeToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "OldFeeToken",
          "type": "address"
        }
      ],
      "name": "NewFeeToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "Amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "From",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "Token",
          "type": "address"
        }
      ],
      "name": "TransferIn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "Amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "From",
          "type": "address"
        }
      ],
      "name": "TransferInETH",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "Amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "To",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "Token",
          "type": "address"
        }
      ],
      "name": "TransferOut",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "Fee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "FeeToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "GovernerContract",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "Reserve",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "setGovernerContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "PayFee",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "SetFeeAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "SetFeeToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "WithdrawFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"NewFeeAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"OldFeeAmount\",\"type\":\"uint256\"}],\"name\":\"NewFeeAmount\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"NewFeeToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"OldFeeToken\",\"type\":\"address\"}],\"name\":\"NewFeeToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"Amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"From\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"Token\",\"type\":\"address\"}],\"name\":\"TransferIn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"Amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"From\",\"type\":\"address\"}],\"name\":\"TransferInETH\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"Amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"To\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"Token\",\"type\":\"address\"}],\"name\":\"TransferOut\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"Fee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FeeToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GovernerContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"PayFee\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Reserve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"SetFeeAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"SetFeeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"WithdrawFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setGovernerContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"poolz-helper-v2/contracts/FeeBaseHelper.sol\":\"FeeBaseHelper\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":true,\"orderLiterals\":false,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":9999999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"poolz-helper-v2/contracts/ERC20Helper.sol\":{\"keccak256\":\"0xad6a512c21b1b36aff9ab12d819488ff9bd454ac02c37a11dd679ef55a986d2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://32a3805c6964dca87d4a34eb1c8bdc715d4134a469ddb7db6bab23be1b6d72ba\",\"dweb:/ipfs/QmY2nhzC7VKpw1C8uZSWNZ1BcjoaZMXiN1Qsome2VYJQ3P\"]},\"poolz-helper-v2/contracts/FeeBaseHelper.sol\":{\"keccak256\":\"0xbcc9c238a3c2c21235dd4700faa1c813acc19994f5b02cf0052334db37b7f07a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a008f62d72818c31eae68e9d33be0111418e84e12c40320ebb79087d744c0ad8\",\"dweb:/ipfs/QmXNnjhfiMT86EvocSB8yjPSuoGkmoYzHqMforN2349zbj\"]},\"poolz-helper-v2/contracts/GovManager.sol\":{\"keccak256\":\"0x4fb7df9b3555a27e9db7edd24ddeb7e1dfea7c050ad79c028d7238440445b216\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90a56ed325e4cd780e1ce3580a7d59e821a197f35ed68b55fcc4308646c3f02a\",\"dweb:/ipfs/QmTKo1MewBDHMQXht3JjuwEgTVqmAsUZHUBcXH5Ki6UXEC\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061002d61002261007460201b60201c565b61007c60201b60201c565b6000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610140565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61152d8061014f6000396000f3fe6080604052600436106100c75760003560e01c80638da5cb5b11610074578063d854f7021161004e578063d854f70214610235578063da0ff68c1461025e578063f2fde38b1461027a576100c7565b80638da5cb5b146101b4578063bef7a2f0146101df578063cda95d801461020a576100c7565b8063481531e9116100a5578063481531e9146101495780636681896714610174578063715018a61461019d576100c7565b80630842bcbb146100cc5780630cd8e965146100f55780633aa0d15d14610120575b600080fd5b3480156100d857600080fd5b506100f360048036038101906100ee919061105d565b6102a3565b005b34801561010157600080fd5b5061010a6104b4565b6040516101179190611084565b60405180910390f35b34801561012c57600080fd5b50610147600480360381019061014291906110ab565b6104da565b005b34801561015557600080fd5b5061015e6106cb565b60405161016b9190611084565b60405180910390f35b34801561018057600080fd5b5061019b6004803603810190610196919061105d565b6106f1565b005b3480156101a957600080fd5b506101b2610802565b005b3480156101c057600080fd5b506101c9610816565b6040516101d69190611084565b60405180910390f35b3480156101eb57600080fd5b506101f461083f565b60405161020191906110d2565b60405180910390f35b34801561021657600080fd5b5061021f610845565b60405161022c91906110d2565b60405180910390f35b34801561024157600080fd5b5061025c600480360381019061025791906110e3565b61084b565b005b610278600480360381019061027391906110e3565b6109a1565b005b34801561028657600080fd5b506102a1600480360381019061029c919061105d565b610acc565b005b6102ab610816565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806103315750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610370576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610367906110ff565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610400576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f79061113d565b60405180910390fd5b6000600454111561041557610414326104da565b5b7f2a649a96ed014013ba4748bc2952462a2adb0707fb5a2f30ff1f9041425f168f81600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660405161046892919061117b565b60405180910390a180600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6104e2610816565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806105685750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6105a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059e906110ff565b60405180910390fd5b6000600454116105ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e3906111ad565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610690578073ffffffffffffffffffffffffffffffffffffffff166108fc6004549081150290604051600060405180830381858888f1935050505015801561068a573d6000803e3d6000fd5b506106c0565b6106bf600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682600454610b4f565b5b600060048190555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6106f9610816565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061077f5750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6107be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b5906110ff565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61080a610c73565b6108146000610cf1565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60025481565b60045481565b610853610816565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806108d95750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610918576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090f906110ff565b60405180910390fd5b806002540361095c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610953906111eb565b60405180910390fd5b7f9d7f8f903b5290796d6b981141519d69dacf3b8bc9d0a19fabd782e73e8861918160025460405161098f929190611229565b60405180910390a18060028190555050565b6000810315610ac957600073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610a815780341015610a43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3a90611241565b60405180910390fd5b7f3a32cdd14cdfd431946dfa0b2aef5ace661340411aaadcaee6aef6738d3023263432604051610a7492919061127f565b60405180910390a1610aaf565b610aae600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163283610db5565b5b8060046000828254610ac191906112ad565b925050819055505b50565b610ad4610c73565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3a906112f2565b60405180910390fd5b610b4c81610cf1565b50565b6000610b5b8430610fac565b90507fe4d818e6f992efbd60db553f3edce819a199baec79a784b95c89bc8ee86f2584828486604051610b9093929190611356565b60405180910390a18373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff1660e01b8152600401610bd392919061138f565b6020604051808303816000875af1158015610bf2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c1691906113bd565b508082610c238630610fac565b610c2d91906112ad565b14610c6d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c64906113e9565b60405180910390fd5b50505050565b610c7b611030565b73ffffffffffffffffffffffffffffffffffffffff16610c99610816565b73ffffffffffffffffffffffffffffffffffffffff1614610cef576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce690611427565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b828282808373ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e84306040518363ffffffff1660e01b8152600401610df492919061117b565b602060405180830381865afa158015610e11573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e359190611464565b1015610e76576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e6d90611480565b60405180910390fd5b60008411610e8357600080fd5b6000610e8f8730610fac565b90508673ffffffffffffffffffffffffffffffffffffffff166323b872dd8730886040518463ffffffff1660e01b8152600401610ece939291906114be565b6020604051808303816000875af1158015610eed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f1191906113bd565b507f1fecf4702e692891a7c2f0d328779b085efb5edd094fa5558bd5cd147a167922858789604051610f4593929190611356565b60405180910390a1610f578730610fac565b8582610f6391906112ad565b14610fa3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9a906113e9565b60405180910390fd5b50505050505050565b60008273ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b8152600401610fe79190611084565b602060405180830381865afa158015611004573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110289190611464565b905092915050565b600033905090565b73ffffffffffffffffffffffffffffffffffffffff8116811461105a57600080fd5b50565b60006020828403121561106f57600080fd5b813561107a81611038565b8091505092915050565b600060208201905073ffffffffffffffffffffffffffffffffffffffff8316825292915050565b6000602082840312156110bd57600080fd5b81356110c881611038565b8091505092915050565b600060208201905082825292915050565b6000602082840312156110f557600080fd5b8135905092915050565b60208152601360208201527f417574686f72697a6174696f6e204572726f720000000000000000000000000060408201526000606082019050919050565b60208152601860208201527f43616e2774207377617020746f2073616d6520746f6b656e000000000000000060408201526000606082019050919050565b600060408201905073ffffffffffffffffffffffffffffffffffffffff80851683528084166020840152509392505050565b60208152601260208201527f46656520616d6f756e74206973207a65726f000000000000000000000000000060408201526000606082019050919050565b60208152601c60208201527f43616e2774207377617020746f2073616d65206665652076616c75650000000060408201526000606082019050919050565b60006040820190508382528260208301529392505050565b60208152601760208201527f4e6f7420456e6f756768204665652050726f766964656400000000000000000060408201526000606082019050919050565b600060408201905083825273ffffffffffffffffffffffffffffffffffffffff831660208301529392505050565b600082198211156112e7577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b828201905092915050565b60208152602660208201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201527f646472657373000000000000000000000000000000000000000000000000000060608201526000608082019050919050565b600060608201905084825273ffffffffffffffffffffffffffffffffffffffff8085166020840152808416604084015250949350505050565b600060408201905073ffffffffffffffffffffffffffffffffffffffff841682528260208301529392505050565b6000602082840312156113cf57600080fd5b815180151581146113df57600080fd5b8091505092915050565b60208152601d60208201527f7265636976652077726f6e6720616d6f756e74206f6620746f6b656e7300000060408201526000606082019050919050565b602081526020808201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526000606082019050919050565b60006020828403121561147657600080fd5b8151905092915050565b60208152600c60208201527f6e6f20616c6c6f77616e6365000000000000000000000000000000000000000060408201526000606082019050919050565b600060608201905073ffffffffffffffffffffffffffffffffffffffff808616835280851660208401525082604083015294935050505056fea2646970667358221220fb5851eea72b4ea469d8b6bbc7a1efd60c9806b135acac1ee0faf37842d2322464736f6c634300080f0033",
  "deployedBytecode": "0x6080604052600436106100c75760003560e01c80638da5cb5b11610074578063d854f7021161004e578063d854f70214610235578063da0ff68c1461025e578063f2fde38b1461027a576100c7565b80638da5cb5b146101b4578063bef7a2f0146101df578063cda95d801461020a576100c7565b8063481531e9116100a5578063481531e9146101495780636681896714610174578063715018a61461019d576100c7565b80630842bcbb146100cc5780630cd8e965146100f55780633aa0d15d14610120575b600080fd5b3480156100d857600080fd5b506100f360048036038101906100ee919061105d565b6102a3565b005b34801561010157600080fd5b5061010a6104b4565b6040516101179190611084565b60405180910390f35b34801561012c57600080fd5b50610147600480360381019061014291906110ab565b6104da565b005b34801561015557600080fd5b5061015e6106cb565b60405161016b9190611084565b60405180910390f35b34801561018057600080fd5b5061019b6004803603810190610196919061105d565b6106f1565b005b3480156101a957600080fd5b506101b2610802565b005b3480156101c057600080fd5b506101c9610816565b6040516101d69190611084565b60405180910390f35b3480156101eb57600080fd5b506101f461083f565b60405161020191906110d2565b60405180910390f35b34801561021657600080fd5b5061021f610845565b60405161022c91906110d2565b60405180910390f35b34801561024157600080fd5b5061025c600480360381019061025791906110e3565b61084b565b005b610278600480360381019061027391906110e3565b6109a1565b005b34801561028657600080fd5b506102a1600480360381019061029c919061105d565b610acc565b005b6102ab610816565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806103315750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610370576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610367906110ff565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610400576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f79061113d565b60405180910390fd5b6000600454111561041557610414326104da565b5b7f2a649a96ed014013ba4748bc2952462a2adb0707fb5a2f30ff1f9041425f168f81600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660405161046892919061117b565b60405180910390a180600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6104e2610816565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806105685750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6105a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059e906110ff565b60405180910390fd5b6000600454116105ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e3906111ad565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610690578073ffffffffffffffffffffffffffffffffffffffff166108fc6004549081150290604051600060405180830381858888f1935050505015801561068a573d6000803e3d6000fd5b506106c0565b6106bf600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682600454610b4f565b5b600060048190555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6106f9610816565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061077f5750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6107be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b5906110ff565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61080a610c73565b6108146000610cf1565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60025481565b60045481565b610853610816565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806108d95750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610918576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090f906110ff565b60405180910390fd5b806002540361095c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610953906111eb565b60405180910390fd5b7f9d7f8f903b5290796d6b981141519d69dacf3b8bc9d0a19fabd782e73e8861918160025460405161098f929190611229565b60405180910390a18060028190555050565b6000810315610ac957600073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610a815780341015610a43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3a90611241565b60405180910390fd5b7f3a32cdd14cdfd431946dfa0b2aef5ace661340411aaadcaee6aef6738d3023263432604051610a7492919061127f565b60405180910390a1610aaf565b610aae600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163283610db5565b5b8060046000828254610ac191906112ad565b925050819055505b50565b610ad4610c73565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3a906112f2565b60405180910390fd5b610b4c81610cf1565b50565b6000610b5b8430610fac565b90507fe4d818e6f992efbd60db553f3edce819a199baec79a784b95c89bc8ee86f2584828486604051610b9093929190611356565b60405180910390a18373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff1660e01b8152600401610bd392919061138f565b6020604051808303816000875af1158015610bf2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c1691906113bd565b508082610c238630610fac565b610c2d91906112ad565b14610c6d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c64906113e9565b60405180910390fd5b50505050565b610c7b611030565b73ffffffffffffffffffffffffffffffffffffffff16610c99610816565b73ffffffffffffffffffffffffffffffffffffffff1614610cef576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce690611427565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b828282808373ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e84306040518363ffffffff1660e01b8152600401610df492919061117b565b602060405180830381865afa158015610e11573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e359190611464565b1015610e76576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e6d90611480565b60405180910390fd5b60008411610e8357600080fd5b6000610e8f8730610fac565b90508673ffffffffffffffffffffffffffffffffffffffff166323b872dd8730886040518463ffffffff1660e01b8152600401610ece939291906114be565b6020604051808303816000875af1158015610eed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f1191906113bd565b507f1fecf4702e692891a7c2f0d328779b085efb5edd094fa5558bd5cd147a167922858789604051610f4593929190611356565b60405180910390a1610f578730610fac565b8582610f6391906112ad565b14610fa3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9a906113e9565b60405180910390fd5b50505050505050565b60008273ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b8152600401610fe79190611084565b602060405180830381865afa158015611004573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110289190611464565b905092915050565b600033905090565b73ffffffffffffffffffffffffffffffffffffffff8116811461105a57600080fd5b50565b60006020828403121561106f57600080fd5b813561107a81611038565b8091505092915050565b600060208201905073ffffffffffffffffffffffffffffffffffffffff8316825292915050565b6000602082840312156110bd57600080fd5b81356110c881611038565b8091505092915050565b600060208201905082825292915050565b6000602082840312156110f557600080fd5b8135905092915050565b60208152601360208201527f417574686f72697a6174696f6e204572726f720000000000000000000000000060408201526000606082019050919050565b60208152601860208201527f43616e2774207377617020746f2073616d6520746f6b656e000000000000000060408201526000606082019050919050565b600060408201905073ffffffffffffffffffffffffffffffffffffffff80851683528084166020840152509392505050565b60208152601260208201527f46656520616d6f756e74206973207a65726f000000000000000000000000000060408201526000606082019050919050565b60208152601c60208201527f43616e2774207377617020746f2073616d65206665652076616c75650000000060408201526000606082019050919050565b60006040820190508382528260208301529392505050565b60208152601760208201527f4e6f7420456e6f756768204665652050726f766964656400000000000000000060408201526000606082019050919050565b600060408201905083825273ffffffffffffffffffffffffffffffffffffffff831660208301529392505050565b600082198211156112e7577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b828201905092915050565b60208152602660208201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201527f646472657373000000000000000000000000000000000000000000000000000060608201526000608082019050919050565b600060608201905084825273ffffffffffffffffffffffffffffffffffffffff8085166020840152808416604084015250949350505050565b600060408201905073ffffffffffffffffffffffffffffffffffffffff841682528260208301529392505050565b6000602082840312156113cf57600080fd5b815180151581146113df57600080fd5b8091505092915050565b60208152601d60208201527f7265636976652077726f6e6720616d6f756e74206f6620746f6b656e7300000060408201526000606082019050919050565b602081526020808201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526000606082019050919050565b60006020828403121561147657600080fd5b8151905092915050565b60208152600c60208201527f6e6f20616c6c6f77616e6365000000000000000000000000000000000000000060408201526000606082019050919050565b600060608201905073ffffffffffffffffffffffffffffffffffffffff808616835280851660208401525082604083015294935050505056fea2646970667358221220fb5851eea72b4ea469d8b6bbc7a1efd60c9806b135acac1ee0faf37842d2322464736f6c634300080f0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:7257:18",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:18",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:109:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "146:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "155:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "158:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "148:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "148:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "148:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "82:5:18"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "93:5:18"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "100:42:18",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "89:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "89:54:18"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "79:2:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "79:65:18"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "72:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "72:73:18"
                  },
                  "nodeType": "YulIf",
                  "src": "69:93:18"
                }
              ]
            },
            "name": "validator_revert_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "48:5:18",
                "type": ""
              }
            ],
            "src": "14:154:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "243:177:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "289:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "298:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "301:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "291:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "291:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "291:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "264:7:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "273:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "260:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "260:23:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "285:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "256:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "256:32:18"
                  },
                  "nodeType": "YulIf",
                  "src": "253:52:18"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "314:36:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "340:9:18"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "327:12:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "327:23:18"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "318:5:18",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "384:5:18"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "359:24:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "359:31:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "359:31:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "399:15:18",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "409:5:18"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "399:6:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "209:9:18",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "220:7:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "232:6:18",
                "type": ""
              }
            ],
            "src": "173:247:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "526:125:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "536:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "548:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "559:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "544:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "544:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "536:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "578:9:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "593:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "601:42:18",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "589:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "589:55:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "571:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "571:74:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "571:74:18"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "495:9:18",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "506:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "517:4:18",
                "type": ""
              }
            ],
            "src": "425:226:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "734:177:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "780:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "789:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "792:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "782:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "782:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "782:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "755:7:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "764:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "751:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "751:23:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "776:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "747:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "747:32:18"
                  },
                  "nodeType": "YulIf",
                  "src": "744:52:18"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "805:36:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "831:9:18"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "818:12:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "818:23:18"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "809:5:18",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "875:5:18"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "850:24:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "850:31:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "850:31:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "890:15:18",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "900:5:18"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "890:6:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "700:9:18",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "711:7:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "723:6:18",
                "type": ""
              }
            ],
            "src": "656:255:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1017:76:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1027:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1039:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1050:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1035:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1035:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1027:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1069:9:18"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1080:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1062:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1062:25:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1062:25:18"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "986:9:18",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "997:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1008:4:18",
                "type": ""
              }
            ],
            "src": "916:177:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1168:110:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1214:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1223:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1226:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1216:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1216:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1216:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1189:7:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1198:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1185:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1185:23:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1210:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1181:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1181:32:18"
                  },
                  "nodeType": "YulIf",
                  "src": "1178:52:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1239:33:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1262:9:18"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1249:12:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1249:23:18"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1239:6:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1134:9:18",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1145:7:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1157:6:18",
                "type": ""
              }
            ],
            "src": "1098:180:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1457:169:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1474:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1485:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1467:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1467:21:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1467:21:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1508:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1519:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1504:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1504:18:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1524:2:18",
                        "type": "",
                        "value": "19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1497:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1497:30:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1497:30:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1547:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1558:2:18",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1543:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1543:18:18"
                      },
                      {
                        "hexValue": "417574686f72697a6174696f6e204572726f72",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1563:21:18",
                        "type": "",
                        "value": "Authorization Error"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1536:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1536:49:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1536:49:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1594:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1606:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1617:2:18",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1602:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1602:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1594:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ec5c0d0e6ae1dff33ee0f153f65ff2684909de39f6a900bcbdbd6ad2e34d73a9__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1434:9:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1448:4:18",
                "type": ""
              }
            ],
            "src": "1283:343:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1805:174:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1822:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1833:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1815:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1815:21:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1815:21:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1856:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1867:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1852:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1852:18:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1872:2:18",
                        "type": "",
                        "value": "24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1845:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1845:30:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1845:30:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1895:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1906:2:18",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1891:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1891:18:18"
                      },
                      {
                        "hexValue": "43616e2774207377617020746f2073616d6520746f6b656e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1911:26:18",
                        "type": "",
                        "value": "Can't swap to same token"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1884:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1884:54:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1884:54:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1947:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1959:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1970:2:18",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1955:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1955:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1947:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ed6b9a9f2228d7d02f65ae4f5cf4337c319f97d4a30d3da273e5f67182bdbb4c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1782:9:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1796:4:18",
                "type": ""
              }
            ],
            "src": "1631:348:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2113:198:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2123:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2135:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2146:2:18",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2131:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2131:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2123:4:18"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2158:52:18",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2168:42:18",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2162:2:18",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2226:9:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2241:6:18"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2249:2:18"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2237:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2237:15:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2219:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2219:34:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2219:34:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2273:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2284:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2269:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2269:18:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "2293:6:18"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2301:2:18"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2289:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2289:15:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2262:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2262:43:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2262:43:18"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2074:9:18",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2085:6:18",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2093:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2104:4:18",
                "type": ""
              }
            ],
            "src": "1984:327:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2490:168:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2507:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2518:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2500:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2500:21:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2500:21:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2541:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2552:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2537:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2537:18:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2557:2:18",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2530:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2530:30:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2530:30:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2580:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2591:2:18",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2576:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2576:18:18"
                      },
                      {
                        "hexValue": "46656520616d6f756e74206973207a65726f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2596:20:18",
                        "type": "",
                        "value": "Fee amount is zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2569:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2569:48:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2569:48:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2626:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2638:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2649:2:18",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2634:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2634:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2626:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_abc5ce0158b8e7c819885221fa392e0ea7347cf2821a33812a335e97bfb35b47__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2467:9:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2481:4:18",
                "type": ""
              }
            ],
            "src": "2316:342:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2837:178:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2854:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2865:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2847:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2847:21:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2847:21:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2888:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2899:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2884:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2884:18:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2904:2:18",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2877:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2877:30:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2877:30:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2927:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2938:2:18",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2923:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2923:18:18"
                      },
                      {
                        "hexValue": "43616e2774207377617020746f2073616d65206665652076616c7565",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2943:30:18",
                        "type": "",
                        "value": "Can't swap to same fee value"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2916:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2916:58:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2916:58:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2983:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2995:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3006:2:18",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2991:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2991:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2983:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_75aca1b8a0a1b0b7982d6cad2333e3440a5dd40f1b9fd8c735da877d01a951a9__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2814:9:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2828:4:18",
                "type": ""
              }
            ],
            "src": "2663:352:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3149:119:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3159:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3171:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3182:2:18",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3167:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3167:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3159:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3201:9:18"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3212:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3194:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3194:25:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3194:25:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3239:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3250:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3235:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3235:18:18"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3255:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3228:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3228:34:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3228:34:18"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3110:9:18",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3121:6:18",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3129:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3140:4:18",
                "type": ""
              }
            ],
            "src": "3020:248:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3447:173:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3464:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3475:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3457:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3457:21:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3457:21:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3498:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3509:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3494:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3494:18:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3514:2:18",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3487:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3487:30:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3487:30:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3537:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3548:2:18",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3533:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3533:18:18"
                      },
                      {
                        "hexValue": "4e6f7420456e6f756768204665652050726f7669646564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3553:25:18",
                        "type": "",
                        "value": "Not Enough Fee Provided"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3526:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3526:53:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3526:53:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3588:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3600:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3611:2:18",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3596:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3596:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3588:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_70ee2627392484715137d6037fab07f05c09f6e24c28761dc605b5208c5cc2bb__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3424:9:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3438:4:18",
                "type": ""
              }
            ],
            "src": "3273:347:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3754:168:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3764:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3776:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3787:2:18",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3772:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3772:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3764:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3806:9:18"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3817:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3799:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3799:25:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3799:25:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3844:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3855:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3840:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3840:18:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "3864:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3872:42:18",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3860:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3860:55:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3833:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3833:83:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3833:83:18"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3715:9:18",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3726:6:18",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3734:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3745:4:18",
                "type": ""
              }
            ],
            "src": "3625:297:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3975:234:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4010:168:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4031:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4034:77:18",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4024:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4024:88:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4024:88:18"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4132:1:18",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4135:4:18",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4125:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4125:15:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4125:15:18"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4160:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4163:4:18",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4153:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4153:15:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4153:15:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3991:1:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "3998:1:18"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "3994:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3994:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3988:2:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3988:13:18"
                  },
                  "nodeType": "YulIf",
                  "src": "3985:193:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4187:16:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4198:1:18"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4201:1:18"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4194:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4194:9:18"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "4187:3:18"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3958:1:18",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3961:1:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "3967:3:18",
                "type": ""
              }
            ],
            "src": "3927:282:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4388:228:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4405:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4416:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4398:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4398:21:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4398:21:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4439:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4450:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4435:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4435:18:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4455:2:18",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4428:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4428:30:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4428:30:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4478:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4489:2:18",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4474:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4474:18:18"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4494:34:18",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4467:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4467:62:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4467:62:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4549:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4560:2:18",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4545:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4545:18:18"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4565:8:18",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4538:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4538:36:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4538:36:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4583:27:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4595:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4606:3:18",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4591:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4591:19:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4583:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4365:9:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4379:4:18",
                "type": ""
              }
            ],
            "src": "4214:402:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4778:241:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4788:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4800:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4811:2:18",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4796:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4796:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4788:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4830:9:18"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4841:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4823:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4823:25:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4823:25:18"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4857:52:18",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "4867:42:18",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "4861:2:18",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4929:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4940:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4925:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4925:18:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "4949:6:18"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4957:2:18"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4945:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4945:15:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4918:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4918:43:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4918:43:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4981:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4992:2:18",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4977:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4977:18:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "5001:6:18"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5009:2:18"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4997:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4997:15:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4970:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4970:43:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4970:43:18"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_address_t_address__to_t_uint256_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4731:9:18",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4742:6:18",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4750:6:18",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4758:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4769:4:18",
                "type": ""
              }
            ],
            "src": "4621:398:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5153:168:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5163:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5175:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5186:2:18",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5171:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5171:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5163:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5205:9:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5220:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5228:42:18",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5216:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5216:55:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5198:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5198:74:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5198:74:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5292:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5303:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5288:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5288:18:18"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5308:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5281:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5281:34:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5281:34:18"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5114:9:18",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5125:6:18",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5133:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5144:4:18",
                "type": ""
              }
            ],
            "src": "5024:297:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5404:199:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5450:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5459:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5462:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5452:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5452:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5452:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5425:7:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5434:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5421:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5421:23:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5446:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5417:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5417:32:18"
                  },
                  "nodeType": "YulIf",
                  "src": "5414:52:18"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5475:29:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5494:9:18"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5488:5:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5488:16:18"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "5479:5:18",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5557:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5566:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5569:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5559:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5559:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5559:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5526:5:18"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "5547:5:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "5540:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5540:13:18"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "5533:6:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5533:21:18"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "5523:2:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5523:32:18"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5516:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5516:40:18"
                  },
                  "nodeType": "YulIf",
                  "src": "5513:60:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5582:15:18",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "5592:5:18"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5582:6:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5370:9:18",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5381:7:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5393:6:18",
                "type": ""
              }
            ],
            "src": "5326:277:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5782:179:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5799:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5810:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5792:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5792:21:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5792:21:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5833:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5844:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5829:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5829:18:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5849:2:18",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5822:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5822:30:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5822:30:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5872:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5883:2:18",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5868:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5868:18:18"
                      },
                      {
                        "hexValue": "7265636976652077726f6e6720616d6f756e74206f6620746f6b656e73",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5888:31:18",
                        "type": "",
                        "value": "recive wrong amount of tokens"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5861:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5861:59:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5861:59:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5929:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5941:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5952:2:18",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5937:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5937:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5929:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4ce6dabe2d3d06e6fd9d2d81c000032c6684375bc9f9ff97a4d5848e860ce839__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5759:9:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5773:4:18",
                "type": ""
              }
            ],
            "src": "5608:353:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6140:182:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6157:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6168:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6150:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6150:21:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6150:21:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6191:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6202:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6187:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6187:18:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6207:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6180:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6180:30:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6180:30:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6230:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6241:2:18",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6226:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6226:18:18"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6246:34:18",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6219:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6219:62:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6219:62:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6290:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6302:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6313:2:18",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6298:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6298:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6290:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6117:9:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6131:4:18",
                "type": ""
              }
            ],
            "src": "5966:356:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6408:103:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6454:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6463:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6466:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6456:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6456:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6456:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6429:7:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6438:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6425:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6425:23:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6450:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6421:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6421:32:18"
                  },
                  "nodeType": "YulIf",
                  "src": "6418:52:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6479:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6495:9:18"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6489:5:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6489:16:18"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "6479:6:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6374:9:18",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6385:7:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6397:6:18",
                "type": ""
              }
            ],
            "src": "6327:184:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6690:162:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6707:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6718:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6700:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6700:21:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6700:21:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6741:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6752:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6737:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6737:18:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6757:2:18",
                        "type": "",
                        "value": "12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6730:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6730:30:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6730:30:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6780:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6791:2:18",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6776:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6776:18:18"
                      },
                      {
                        "hexValue": "6e6f20616c6c6f77616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6796:14:18",
                        "type": "",
                        "value": "no allowance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6769:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6769:42:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6769:42:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6820:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6832:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6843:2:18",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6828:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6828:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6820:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_57dd6f7b2e2079a1df4327b3164d5edd21b14126c301977a488211d6e362f76f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6667:9:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6681:4:18",
                "type": ""
              }
            ],
            "src": "6516:336:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7014:241:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7024:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7036:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7047:2:18",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7032:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7032:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7024:4:18"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7059:52:18",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "7069:42:18",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "7063:2:18",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7127:9:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "7142:6:18"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7150:2:18"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7138:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7138:15:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7120:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7120:34:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7120:34:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7174:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7185:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7170:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7170:18:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "7194:6:18"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7202:2:18"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7190:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7190:15:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7163:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7163:43:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7163:43:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7226:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7237:2:18",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7222:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7222:18:18"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "7242:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7215:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7215:34:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7215:34:18"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6967:9:18",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6978:6:18",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6986:6:18",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6994:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7005:4:18",
                "type": ""
              }
            ],
            "src": "6857:398:18"
          }
        ]
      },
      "contents": "{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_ec5c0d0e6ae1dff33ee0f153f65ff2684909de39f6a900bcbdbd6ad2e34d73a9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Authorization Error\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ed6b9a9f2228d7d02f65ae4f5cf4337c319f97d4a30d3da273e5f67182bdbb4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Can't swap to same token\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_abc5ce0158b8e7c819885221fa392e0ea7347cf2821a33812a335e97bfb35b47__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Fee amount is zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_75aca1b8a0a1b0b7982d6cad2333e3440a5dd40f1b9fd8c735da877d01a951a9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Can't swap to same fee value\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_70ee2627392484715137d6037fab07f05c09f6e24c28761dc605b5208c5cc2bb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Not Enough Fee Provided\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_address_t_address__to_t_uint256_t_address_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_4ce6dabe2d3d06e6fd9d2d81c000032c6684375bc9f9ff97a4d5848e860ce839__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"recive wrong amount of tokens\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_57dd6f7b2e2079a1df4327b3164d5edd21b14126c301977a488211d6e362f76f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"no allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n}",
      "id": 18,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "119:1635:7:-:0;;;;;;;;;;;;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;562:1:8;535:16;;:29;;;;;;;;;;;;;;;;;;119:1635:7;;640:96:5;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;119:1635:7:-;;;;;;;",
  "deployedSourceMap": "119:1635:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1031:409;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;156:31:8;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1448:303:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;394:23;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;385:117:8;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1831:101:0;;;;;;;;;;;;;:::i;:::-;;1201:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;369:18:7;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;424:22;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;822:201;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;455:359;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2081:198:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1031:409:7;269:7:8;:5;:7::i;:::-;255:21;;:10;:21;;;:55;;;;294:16;;;;;;;;;;;280:30;;:10;:30;;;255:55;233:124;;;;;;;;;;;;:::i;:::-;;;;;;;;;1121:6:7::1;1109:18;;:8;;;;;;;;;;;:18;;::::0;1101:55:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1181:1;1171:7;;:11;1167:147;;;1199:31;1219:9;1199:11;:31::i;:::-;1167:147;1329:29;1341:6;1349:8;;;;;;;;;;;1329:29;;;;;;;:::i;:::-;;;;;;;;1380:6;1369:8;;:17;;;;;;;;;;;;;;;;;;1031:409:::0;:::o;156:31:8:-;;;;;;;;;;;;;:::o;1448:303:7:-;269:7:8;:5;:7::i;:::-;255:21;;:10;:21;;;:55;;;;294:16;;;;;;;;;;;280:30;;:10;:30;;;255:55;233:124;;;;;;;;;;;;:::i;:::-;;;;;;;;;1541:1:7::1;1531:7;;:11;1523:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;1600:1;1580:22;;:8;;;;;;;;;;;:22;;::::0;1576:146:::1;;1619:3;:12;;:21;1632:7;;1619:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;1576:146;;;1673:37;1687:8;;;;;;;;;;;1697:3;1702:7;;1673:13;:37::i;:::-;1576:146;1742:1;1732:7;:11;;;;1448:303:::0;:::o;394:23::-;;;;;;;;;;;;;:::o;385:117:8:-;269:7;:5;:7::i;:::-;255:21;;:10;:21;;;:55;;;;294:16;;;;;;;;;;;280:30;;:10;:30;;;255:55;233:124;;;;;;;;;;;;:::i;:::-;;;;;;;;;486:8:::1;467:16;;:27;;;;;;;;;;;;;;;;;;385:117:::0;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1201:85::-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;369:18:7:-;;;;:::o;424:22::-;;;;:::o;822:201::-;269:7:8;:5;:7::i;:::-;255:21;;:10;:21;;;:55;;;;294:16;;;;;;;;;;;280:30;;:10;:30;;;255:55;233:124;;;;;;;;;;;;:::i;:::-;;;;;;;;;909:7:7::1;902:3;;:14:::0;894:55:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;965:26;978:7;987:3;;965:26;;;;;;;:::i;:::-;;;;;;;;1008:7;1002:3;:13;;;;822:201:::0;:::o;455:359::-;523:1;515:4;:9;511:22;526:7;511:22;567:1;547:22;;:8;;;;;;;;;;;:22;;;543:238;;607:4;594:9;:17;;586:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;659:35;673:9;684;659:35;;;;;;;:::i;:::-;;;;;;;;543:238;;;727:42;743:8;;;;;;;;;;;753:9;764:4;727:15;:42::i;:::-;543:238;802:4;791:7;;:15;;;;;;;:::i;:::-;;;;;;;;455:359;;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;::::0;2161:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;547:449:6:-;675:18;696:35;709:6;725:4;696:12;:35::i;:::-;675:56;;747:38;759:7;768:8;778:6;747:38;;;;;;;;:::i;:::-;;;;;;;;802:6;796:22;;;819:8;829:7;796:41;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;921:10;909:7;871:35;884:6;900:4;871:12;:35::i;:::-;:45;;;;:::i;:::-;870:61;848:140;;;;;;;;;;;;:::i;:::-;;;;;;;;;664:332;547:449;;;:::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;1191:540:6:-;1323:6;1331:8;1341:7;472;428:6;422:23;;;446:6;462:4;422:46;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:57;;400:119;;;;;;;;;;;;:::i;:::-;;;;;;;;;1379:1:::1;1369:7;:11;1361:20;;;::::0;::::1;;1392:18;1413:35;1426:6;1442:4;1413:12;:35::i;:::-;1392:56;;1465:6;1459:26;;;1486:8;1504:4;1511:7;1459:60;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1535:37;1546:7;1555:8;1565:6;1535:37;;;;;;;;:::i;:::-;;;;;;;;1631:35;1644:6;1660:4;1631:12;:35::i;:::-;1619:7;1606:10;:20;;;;:::i;:::-;1605:61;1583:140;;;;;;;;;;;;:::i;:::-;;;;;;;;;1350:381;1191:540:::0;;;;;;:::o;1004:179::-;1110:7;1148:6;1142:23;;;1166:8;1142:33;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1135:40;;1004:179;;;;:::o;640:96:5:-;693:7;719:10;712:17;;640:96;:::o;14:154:18:-;100:42;93:5;89:54;82:5;79:65;69:93;;158:1;155;148:12;69:93;14:154;:::o;173:247::-;232:6;285:2;273:9;264:7;260:23;256:32;253:52;;;301:1;298;291:12;253:52;340:9;327:23;359:31;384:5;359:31;:::i;:::-;409:5;399:15;;;173:247;;;;:::o;425:226::-;517:4;559:2;548:9;544:18;536:26;;601:42;593:6;589:55;578:9;571:74;425:226;;;;:::o;656:255::-;723:6;776:2;764:9;755:7;751:23;747:32;744:52;;;792:1;789;782:12;744:52;831:9;818:23;850:31;875:5;850:31;:::i;:::-;900:5;890:15;;;656:255;;;;:::o;916:177::-;1008:4;1050:2;1039:9;1035:18;1027:26;;1080:6;1069:9;1062:25;916:177;;;;:::o;1098:180::-;1157:6;1210:2;1198:9;1189:7;1185:23;1181:32;1178:52;;;1226:1;1223;1216:12;1178:52;1262:9;1249:23;1239:33;;1098:180;;;;:::o;1283:343::-;1485:2;1474:9;1467:21;1524:2;1519;1508:9;1504:18;1497:30;1563:21;1558:2;1547:9;1543:18;1536:49;1448:4;1617:2;1606:9;1602:18;1594:26;;1283:343;;;:::o;1631:348::-;1833:2;1822:9;1815:21;1872:2;1867;1856:9;1852:18;1845:30;1911:26;1906:2;1895:9;1891:18;1884:54;1796:4;1970:2;1959:9;1955:18;1947:26;;1631:348;;;:::o;1984:327::-;2104:4;2146:2;2135:9;2131:18;2123:26;;2168:42;2249:2;2241:6;2237:15;2226:9;2219:34;2301:2;2293:6;2289:15;2284:2;2273:9;2269:18;2262:43;;1984:327;;;;;:::o;2316:342::-;2518:2;2507:9;2500:21;2557:2;2552;2541:9;2537:18;2530:30;2596:20;2591:2;2580:9;2576:18;2569:48;2481:4;2649:2;2638:9;2634:18;2626:26;;2316:342;;;:::o;2663:352::-;2865:2;2854:9;2847:21;2904:2;2899;2888:9;2884:18;2877:30;2943;2938:2;2927:9;2923:18;2916:58;2828:4;3006:2;2995:9;2991:18;2983:26;;2663:352;;;:::o;3020:248::-;3140:4;3182:2;3171:9;3167:18;3159:26;;3212:6;3201:9;3194:25;3255:6;3250:2;3239:9;3235:18;3228:34;3020:248;;;;;:::o;3273:347::-;3475:2;3464:9;3457:21;3514:2;3509;3498:9;3494:18;3487:30;3553:25;3548:2;3537:9;3533:18;3526:53;3438:4;3611:2;3600:9;3596:18;3588:26;;3273:347;;;:::o;3625:297::-;3745:4;3787:2;3776:9;3772:18;3764:26;;3817:6;3806:9;3799:25;3872:42;3864:6;3860:55;3855:2;3844:9;3840:18;3833:83;3625:297;;;;;:::o;3927:282::-;3967:3;3998:1;3994:6;3991:1;3988:13;3985:193;;;4034:77;4031:1;4024:88;4135:4;4132:1;4125:15;4163:4;4160:1;4153:15;3985:193;4201:1;4198;4194:9;4187:16;;3927:282;;;;:::o;4214:402::-;4416:2;4405:9;4398:21;4455:2;4450;4439:9;4435:18;4428:30;4494:34;4489:2;4478:9;4474:18;4467:62;4565:8;4560:2;4549:9;4545:18;4538:36;4379:4;4606:3;4595:9;4591:19;4583:27;;4214:402;;;:::o;4621:398::-;4769:4;4811:2;4800:9;4796:18;4788:26;;4841:6;4830:9;4823:25;4867:42;4957:2;4949:6;4945:15;4940:2;4929:9;4925:18;4918:43;5009:2;5001:6;4997:15;4992:2;4981:9;4977:18;4970:43;;4621:398;;;;;;:::o;5024:297::-;5144:4;5186:2;5175:9;5171:18;5163:26;;5228:42;5220:6;5216:55;5205:9;5198:74;5308:6;5303:2;5292:9;5288:18;5281:34;5024:297;;;;;:::o;5326:277::-;5393:6;5446:2;5434:9;5425:7;5421:23;5417:32;5414:52;;;5462:1;5459;5452:12;5414:52;5494:9;5488:16;5547:5;5540:13;5533:21;5526:5;5523:32;5513:60;;5569:1;5566;5559:12;5513:60;5592:5;5582:15;;;5326:277;;;;:::o;5608:353::-;5810:2;5799:9;5792:21;5849:2;5844;5833:9;5829:18;5822:30;5888:31;5883:2;5872:9;5868:18;5861:59;5773:4;5952:2;5941:9;5937:18;5929:26;;5608:353;;;:::o;5966:356::-;6168:2;6157:9;6150:21;6207:2;6202;6191:9;6187:18;6180:30;6246:34;6241:2;6230:9;6226:18;6219:62;6131:4;6313:2;6302:9;6298:18;6290:26;;5966:356;;;:::o;6327:184::-;6397:6;6450:2;6438:9;6429:7;6425:23;6421:32;6418:52;;;6466:1;6463;6456:12;6418:52;6495:9;6489:16;6479:26;;6327:184;;;;:::o;6516:336::-;6718:2;6707:9;6700:21;6757:2;6752;6741:9;6737:18;6730:30;6796:14;6791:2;6780:9;6776:18;6769:42;6681:4;6843:2;6832:9;6828:18;6820:26;;6516:336;;;:::o;6857:398::-;7005:4;7047:2;7036:9;7032:18;7024:26;;7069:42;7150:2;7142:6;7138:15;7127:9;7120:34;7202:2;7194:6;7190:15;7185:2;7174:9;7170:18;7163:43;;7242:6;7237:2;7226:9;7222:18;7215:34;6857:398;;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./ERC20Helper.sol\";\r\nimport \"./GovManager.sol\";\r\n\r\ncontract FeeBaseHelper is ERC20Helper, GovManager {\r\n    event TransferInETH(uint256 Amount, address From);\r\n    event NewFeeAmount(uint256 NewFeeAmount, uint256 OldFeeAmount);\r\n    event NewFeeToken(address NewFeeToken, address OldFeeToken);\r\n\r\n    uint256 public Fee;\r\n    address public FeeToken;\r\n    uint256 public Reserve;\r\n\r\n    function PayFee(uint256 _fee) public payable {\r\n        if (_fee == 0) return;\r\n        if (FeeToken == address(0)) {\r\n            require(msg.value >= _fee, \"Not Enough Fee Provided\");\r\n            emit TransferInETH(msg.value, tx.origin);\r\n        } else {\r\n            TransferInToken(FeeToken, tx.origin, _fee);\r\n        }\r\n        Reserve += _fee;\r\n    }\r\n\r\n    function SetFeeAmount(uint256 _amount) public onlyOwnerOrGov {\r\n        require(Fee != _amount, \"Can't swap to same fee value\");\r\n        emit NewFeeAmount(_amount, Fee);\r\n        Fee = _amount;\r\n    }\r\n\r\n    function SetFeeToken(address _token) public onlyOwnerOrGov {\r\n        require(FeeToken != _token, \"Can't swap to same token\");\r\n        if (Reserve > 0) {\r\n            WithdrawFee(payable(tx.origin)); // If the admin tries to set a new token without withrowing the old one\r\n        }\r\n        emit NewFeeToken(_token, FeeToken);\r\n        FeeToken = _token; // set address(0) to use ETH/BNB as main coin\r\n    }\r\n\r\n    function WithdrawFee(address payable _to) public onlyOwnerOrGov {\r\n        require(Reserve > 0, \"Fee amount is zero\");\r\n        if (FeeToken == address(0)) {\r\n            _to.transfer(Reserve);\r\n        } else {\r\n            TransferToken(FeeToken, _to, Reserve);\r\n        }\r\n        Reserve = 0;\r\n    }\r\n}\r\n",
  "sourcePath": "poolz-helper-v2\\contracts\\FeeBaseHelper.sol",
  "ast": {
    "absolutePath": "poolz-helper-v2/contracts/FeeBaseHelper.sol",
    "exportedSymbols": {
      "Context": [
        931
      ],
      "ERC20": [
        806
      ],
      "ERC20Helper": [
        1133
      ],
      "FeeBaseHelper": [
        1313
      ],
      "GovManager": [
        1362
      ],
      "IERC20": [
        884
      ],
      "IERC20Metadata": [
        909
      ],
      "Ownable": [
        112
      ]
    },
    "id": 1314,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1135,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:7"
      },
      {
        "absolutePath": "poolz-helper-v2/contracts/ERC20Helper.sol",
        "file": "./ERC20Helper.sol",
        "id": 1136,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1314,
        "sourceUnit": 1134,
        "src": "60:27:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "poolz-helper-v2/contracts/GovManager.sol",
        "file": "./GovManager.sol",
        "id": 1137,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1314,
        "sourceUnit": 1363,
        "src": "89:26:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1138,
              "name": "ERC20Helper",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1133,
              "src": "145:11:7"
            },
            "id": 1139,
            "nodeType": "InheritanceSpecifier",
            "src": "145:11:7"
          },
          {
            "baseName": {
              "id": 1140,
              "name": "GovManager",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1362,
              "src": "158:10:7"
            },
            "id": 1141,
            "nodeType": "InheritanceSpecifier",
            "src": "158:10:7"
          }
        ],
        "canonicalName": "FeeBaseHelper",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1313,
        "linearizedBaseContracts": [
          1313,
          1362,
          112,
          931,
          1133
        ],
        "name": "FeeBaseHelper",
        "nameLocation": "128:13:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "eventSelector": "3a32cdd14cdfd431946dfa0b2aef5ace661340411aaadcaee6aef6738d302326",
            "id": 1147,
            "name": "TransferInETH",
            "nameLocation": "182:13:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1143,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "Amount",
                  "nameLocation": "204:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1147,
                  "src": "196:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1142,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "196:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1145,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "From",
                  "nameLocation": "220:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1147,
                  "src": "212:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1144,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "212:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "195:30:7"
            },
            "src": "176:50:7"
          },
          {
            "anonymous": false,
            "eventSelector": "9d7f8f903b5290796d6b981141519d69dacf3b8bc9d0a19fabd782e73e886191",
            "id": 1153,
            "name": "NewFeeAmount",
            "nameLocation": "238:12:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1149,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "NewFeeAmount",
                  "nameLocation": "259:12:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1153,
                  "src": "251:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1148,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "251:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1151,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "OldFeeAmount",
                  "nameLocation": "281:12:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1153,
                  "src": "273:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1150,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "273:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "250:44:7"
            },
            "src": "232:63:7"
          },
          {
            "anonymous": false,
            "eventSelector": "2a649a96ed014013ba4748bc2952462a2adb0707fb5a2f30ff1f9041425f168f",
            "id": 1159,
            "name": "NewFeeToken",
            "nameLocation": "307:11:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1158,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1155,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "NewFeeToken",
                  "nameLocation": "327:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1159,
                  "src": "319:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1154,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "319:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1157,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "OldFeeToken",
                  "nameLocation": "348:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1159,
                  "src": "340:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1156,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "340:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "318:42:7"
            },
            "src": "301:60:7"
          },
          {
            "constant": false,
            "functionSelector": "bef7a2f0",
            "id": 1161,
            "mutability": "mutable",
            "name": "Fee",
            "nameLocation": "384:3:7",
            "nodeType": "VariableDeclaration",
            "scope": 1313,
            "src": "369:18:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1160,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "369:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "481531e9",
            "id": 1163,
            "mutability": "mutable",
            "name": "FeeToken",
            "nameLocation": "409:8:7",
            "nodeType": "VariableDeclaration",
            "scope": 1313,
            "src": "394:23:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1162,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "394:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "cda95d80",
            "id": 1165,
            "mutability": "mutable",
            "name": "Reserve",
            "nameLocation": "439:7:7",
            "nodeType": "VariableDeclaration",
            "scope": 1313,
            "src": "424:22:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1164,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "424:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1210,
              "nodeType": "Block",
              "src": "500:314:7",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1170,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1167,
                      "src": "515:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1171,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "523:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "515:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1174,
                  "nodeType": "IfStatement",
                  "src": "511:22:7",
                  "trueBody": {
                    "functionReturnParameters": 1169,
                    "id": 1173,
                    "nodeType": "Return",
                    "src": "526:7:7"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1175,
                      "name": "FeeToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1163,
                      "src": "547:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "567:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "559:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1176,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "559:7:7",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1179,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "559:10:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "547:22:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1204,
                    "nodeType": "Block",
                    "src": "712:69:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1198,
                              "name": "FeeToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1163,
                              "src": "743:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 1199,
                                "name": "tx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967270,
                                "src": "753:2:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_transaction",
                                  "typeString": "tx"
                                }
                              },
                              "id": 1200,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "origin",
                              "nodeType": "MemberAccess",
                              "src": "753:9:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1201,
                              "name": "_fee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1167,
                              "src": "764:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1197,
                            "name": "TransferInToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1108,
                            "src": "727:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "727:42:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1203,
                        "nodeType": "ExpressionStatement",
                        "src": "727:42:7"
                      }
                    ]
                  },
                  "id": 1205,
                  "nodeType": "IfStatement",
                  "src": "543:238:7",
                  "trueBody": {
                    "id": 1196,
                    "nodeType": "Block",
                    "src": "571:135:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1185,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1182,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "594:3:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1183,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "594:9:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 1184,
                                "name": "_fee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1167,
                                "src": "607:4:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "594:17:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420456e6f756768204665652050726f7669646564",
                              "id": 1186,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "613:25:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_70ee2627392484715137d6037fab07f05c09f6e24c28761dc605b5208c5cc2bb",
                                "typeString": "literal_string \"Not Enough Fee Provided\""
                              },
                              "value": "Not Enough Fee Provided"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_70ee2627392484715137d6037fab07f05c09f6e24c28761dc605b5208c5cc2bb",
                                "typeString": "literal_string \"Not Enough Fee Provided\""
                              }
                            ],
                            "id": 1181,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "586:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "586:53:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1188,
                        "nodeType": "ExpressionStatement",
                        "src": "586:53:7"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1190,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "673:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1191,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "673:9:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 1192,
                                "name": "tx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967270,
                                "src": "684:2:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_transaction",
                                  "typeString": "tx"
                                }
                              },
                              "id": 1193,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "origin",
                              "nodeType": "MemberAccess",
                              "src": "684:9:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1189,
                            "name": "TransferInETH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1147,
                            "src": "659:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address)"
                            }
                          },
                          "id": 1194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "659:35:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1195,
                        "nodeType": "EmitStatement",
                        "src": "654:40:7"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1206,
                      "name": "Reserve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1165,
                      "src": "791:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1207,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1167,
                      "src": "802:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "791:15:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1209,
                  "nodeType": "ExpressionStatement",
                  "src": "791:15:7"
                }
              ]
            },
            "functionSelector": "da0ff68c",
            "id": 1211,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PayFee",
            "nameLocation": "464:6:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1168,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1167,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nameLocation": "479:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1211,
                  "src": "471:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1166,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "471:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "470:14:7"
            },
            "returnParameters": {
              "id": 1169,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "500:0:7"
            },
            "scope": 1313,
            "src": "455:359:7",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1234,
              "nodeType": "Block",
              "src": "883:140:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1219,
                          "name": "Fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1161,
                          "src": "902:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 1220,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1213,
                          "src": "909:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "902:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e2774207377617020746f2073616d65206665652076616c7565",
                        "id": 1222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "918:30:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_75aca1b8a0a1b0b7982d6cad2333e3440a5dd40f1b9fd8c735da877d01a951a9",
                          "typeString": "literal_string \"Can't swap to same fee value\""
                        },
                        "value": "Can't swap to same fee value"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_75aca1b8a0a1b0b7982d6cad2333e3440a5dd40f1b9fd8c735da877d01a951a9",
                          "typeString": "literal_string \"Can't swap to same fee value\""
                        }
                      ],
                      "id": 1218,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "894:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "894:55:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1224,
                  "nodeType": "ExpressionStatement",
                  "src": "894:55:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1226,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1213,
                        "src": "978:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1227,
                        "name": "Fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1161,
                        "src": "987:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1225,
                      "name": "NewFeeAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1153,
                      "src": "965:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 1228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "965:26:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1229,
                  "nodeType": "EmitStatement",
                  "src": "960:31:7"
                },
                {
                  "expression": {
                    "id": 1232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1230,
                      "name": "Fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1161,
                      "src": "1002:3:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1231,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1213,
                      "src": "1008:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1002:13:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1233,
                  "nodeType": "ExpressionStatement",
                  "src": "1002:13:7"
                }
              ]
            },
            "functionSelector": "d854f702",
            "id": 1235,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1216,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1215,
                  "name": "onlyOwnerOrGov",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1338,
                  "src": "868:14:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "868:14:7"
              }
            ],
            "name": "SetFeeAmount",
            "nameLocation": "831:12:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1214,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1213,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "852:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1235,
                  "src": "844:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1212,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "844:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "843:17:7"
            },
            "returnParameters": {
              "id": 1217,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "883:0:7"
            },
            "scope": 1313,
            "src": "822:201:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1271,
              "nodeType": "Block",
              "src": "1090:350:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1243,
                          "name": "FeeToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1163,
                          "src": "1109:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 1244,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1237,
                          "src": "1121:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1109:18:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e2774207377617020746f2073616d6520746f6b656e",
                        "id": 1246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1129:26:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ed6b9a9f2228d7d02f65ae4f5cf4337c319f97d4a30d3da273e5f67182bdbb4c",
                          "typeString": "literal_string \"Can't swap to same token\""
                        },
                        "value": "Can't swap to same token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ed6b9a9f2228d7d02f65ae4f5cf4337c319f97d4a30d3da273e5f67182bdbb4c",
                          "typeString": "literal_string \"Can't swap to same token\""
                        }
                      ],
                      "id": 1242,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1101:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1101:55:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1248,
                  "nodeType": "ExpressionStatement",
                  "src": "1101:55:7"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1249,
                      "name": "Reserve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1165,
                      "src": "1171:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1250,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1181:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1171:11:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1261,
                  "nodeType": "IfStatement",
                  "src": "1167:147:7",
                  "trueBody": {
                    "id": 1260,
                    "nodeType": "Block",
                    "src": "1184:130:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1255,
                                    "name": "tx",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967270,
                                    "src": "1219:2:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_transaction",
                                      "typeString": "tx"
                                    }
                                  },
                                  "id": 1256,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "origin",
                                  "nodeType": "MemberAccess",
                                  "src": "1219:9:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1254,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1211:8:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 1253,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1211:8:7",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1257,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1211:18:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 1252,
                            "name": "WithdrawFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1312,
                            "src": "1199:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$returns$__$",
                              "typeString": "function (address payable)"
                            }
                          },
                          "id": 1258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1199:31:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1259,
                        "nodeType": "ExpressionStatement",
                        "src": "1199:31:7"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1263,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1237,
                        "src": "1341:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1264,
                        "name": "FeeToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1163,
                        "src": "1349:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1262,
                      "name": "NewFeeToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1159,
                      "src": "1329:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 1265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1329:29:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1266,
                  "nodeType": "EmitStatement",
                  "src": "1324:34:7"
                },
                {
                  "expression": {
                    "id": 1269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1267,
                      "name": "FeeToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1163,
                      "src": "1369:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1268,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1237,
                      "src": "1380:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1369:17:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1270,
                  "nodeType": "ExpressionStatement",
                  "src": "1369:17:7"
                }
              ]
            },
            "functionSelector": "0842bcbb",
            "id": 1272,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1240,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1239,
                  "name": "onlyOwnerOrGov",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1338,
                  "src": "1075:14:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "1075:14:7"
              }
            ],
            "name": "SetFeeToken",
            "nameLocation": "1040:11:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1238,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1237,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1060:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1272,
                  "src": "1052:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1236,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1052:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1051:16:7"
            },
            "returnParameters": {
              "id": 1241,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1090:0:7"
            },
            "scope": 1313,
            "src": "1031:409:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1311,
              "nodeType": "Block",
              "src": "1512:239:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1280,
                          "name": "Reserve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1165,
                          "src": "1531:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1541:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1531:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "46656520616d6f756e74206973207a65726f",
                        "id": 1283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1544:20:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_abc5ce0158b8e7c819885221fa392e0ea7347cf2821a33812a335e97bfb35b47",
                          "typeString": "literal_string \"Fee amount is zero\""
                        },
                        "value": "Fee amount is zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_abc5ce0158b8e7c819885221fa392e0ea7347cf2821a33812a335e97bfb35b47",
                          "typeString": "literal_string \"Fee amount is zero\""
                        }
                      ],
                      "id": 1279,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1523:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1523:42:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1285,
                  "nodeType": "ExpressionStatement",
                  "src": "1523:42:7"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1286,
                      "name": "FeeToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1163,
                      "src": "1580:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1289,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1600:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1592:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1287,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1592:7:7",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1290,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1592:10:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1580:22:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1305,
                    "nodeType": "Block",
                    "src": "1658:64:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1300,
                              "name": "FeeToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1163,
                              "src": "1687:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1301,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1274,
                              "src": "1697:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 1302,
                              "name": "Reserve",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1165,
                              "src": "1702:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1299,
                            "name": "TransferToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1026,
                            "src": "1673:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1303,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1673:37:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1304,
                        "nodeType": "ExpressionStatement",
                        "src": "1673:37:7"
                      }
                    ]
                  },
                  "id": 1306,
                  "nodeType": "IfStatement",
                  "src": "1576:146:7",
                  "trueBody": {
                    "id": 1298,
                    "nodeType": "Block",
                    "src": "1604:48:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1295,
                              "name": "Reserve",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1165,
                              "src": "1632:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1292,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1274,
                              "src": "1619:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 1294,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "1619:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1619:21:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1297,
                        "nodeType": "ExpressionStatement",
                        "src": "1619:21:7"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1307,
                      "name": "Reserve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1165,
                      "src": "1732:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1308,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1742:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1732:11:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1310,
                  "nodeType": "ExpressionStatement",
                  "src": "1732:11:7"
                }
              ]
            },
            "functionSelector": "3aa0d15d",
            "id": 1312,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1277,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1276,
                  "name": "onlyOwnerOrGov",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1338,
                  "src": "1497:14:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "1497:14:7"
              }
            ],
            "name": "WithdrawFee",
            "nameLocation": "1457:11:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1275,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1274,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "1485:3:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1312,
                  "src": "1469:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 1273,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1469:15:7",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1468:21:7"
            },
            "returnParameters": {
              "id": 1278,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1512:0:7"
            },
            "scope": 1313,
            "src": "1448:303:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1314,
        "src": "119:1635:7",
        "usedErrors": []
      }
    ],
    "src": "33:1723:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.15+commit.e14f2714.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.8",
  "updatedAt": "2022-07-13T10:38:20.953Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}
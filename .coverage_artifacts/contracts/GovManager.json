{
  "contractName": "GovManager",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "GovernerContract",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "setGovernerContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"GovernerContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setGovernerContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"poolz-helper-v2/contracts/GovManager.sol\":\"GovManager\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":true,\"orderLiterals\":false,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":9999999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"poolz-helper-v2/contracts/GovManager.sol\":{\"keccak256\":\"0x4fb7df9b3555a27e9db7edd24ddeb7e1dfea7c050ad79c028d7238440445b216\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90a56ed325e4cd780e1ce3580a7d59e821a197f35ed68b55fcc4308646c3f02a\",\"dweb:/ipfs/QmTKo1MewBDHMQXht3JjuwEgTVqmAsUZHUBcXH5Ki6UXEC\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061002d61002261007460201b60201c565b61007c60201b60201c565b6000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610140565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6105a78061014f6000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c8063715018a611610050578063715018a6146100a65780638da5cb5b146100b0578063f2fde38b146100ce57610067565b80630cd8e9651461006c578063668189671461008a575b600080fd5b6100746100ea565b604051610081919061042b565b60405180910390f35b6100a4600480360381019061009f9190610452565b610110565b005b6100ae610221565b005b6100b8610235565b6040516100c5919061042b565b60405180910390f35b6100e860048036038101906100e39190610452565b61025e565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610118610235565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061019e5750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6101dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d490610492565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6102296102e1565b610233600061035f565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6102666102e1565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036102d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102cc906104d0565b60405180910390fd5b6102de8161035f565b50565b6102e9610423565b73ffffffffffffffffffffffffffffffffffffffff16610307610235565b73ffffffffffffffffffffffffffffffffffffffff161461035d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035490610534565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600060208201905073ffffffffffffffffffffffffffffffffffffffff8316825292915050565b60006020828403121561046457600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461048857600080fd5b8091505092915050565b60208152601360208201527f417574686f72697a6174696f6e204572726f720000000000000000000000000060408201526000606082019050919050565b60208152602660208201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201527f646472657373000000000000000000000000000000000000000000000000000060608201526000608082019050919050565b602081526020808201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726040820152600060608201905091905056fea26469706673582212205293d8ff7a5649d900e9fb3f7e241109ecb9edb164b6a0a19eebed23fccb051c64736f6c634300080f0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100675760003560e01c8063715018a611610050578063715018a6146100a65780638da5cb5b146100b0578063f2fde38b146100ce57610067565b80630cd8e9651461006c578063668189671461008a575b600080fd5b6100746100ea565b604051610081919061042b565b60405180910390f35b6100a4600480360381019061009f9190610452565b610110565b005b6100ae610221565b005b6100b8610235565b6040516100c5919061042b565b60405180910390f35b6100e860048036038101906100e39190610452565b61025e565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610118610235565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061019e5750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6101dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d490610492565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6102296102e1565b610233600061035f565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6102666102e1565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036102d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102cc906104d0565b60405180910390fd5b6102de8161035f565b50565b6102e9610423565b73ffffffffffffffffffffffffffffffffffffffff16610307610235565b73ffffffffffffffffffffffffffffffffffffffff161461035d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035490610534565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600060208201905073ffffffffffffffffffffffffffffffffffffffff8316825292915050565b60006020828403121561046457600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461048857600080fd5b8091505092915050565b60208152601360208201527f417574686f72697a6174696f6e204572726f720000000000000000000000000060408201526000606082019050919050565b60208152602660208201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201527f646472657373000000000000000000000000000000000000000000000000000060608201526000608082019050919050565b602081526020808201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726040820152600060608201905091905056fea26469706673582212205293d8ff7a5649d900e9fb3f7e241109ecb9edb164b6a0a19eebed23fccb051c64736f6c634300080f0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1672:18",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:18",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:125:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "182:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "190:42:18",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "178:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "178:55:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:74:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:74:18"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:18",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:18",
                "type": ""
              }
            ],
            "src": "14:226:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "315:239:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "361:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "370:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "373:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "363:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "363:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "363:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "336:7:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "345:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "332:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "332:23:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "357:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "328:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "328:32:18"
                  },
                  "nodeType": "YulIf",
                  "src": "325:52:18"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "386:36:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "412:9:18"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "399:12:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "399:23:18"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "390:5:18",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "508:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "517:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "520:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "510:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "510:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "510:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "444:5:18"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "455:5:18"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "462:42:18",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "451:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "451:54:18"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "441:2:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "441:65:18"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "434:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "434:73:18"
                  },
                  "nodeType": "YulIf",
                  "src": "431:93:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "533:15:18",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "543:5:18"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "533:6:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "281:9:18",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "292:7:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "304:6:18",
                "type": ""
              }
            ],
            "src": "245:309:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "733:169:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "750:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "761:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "743:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "743:21:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "743:21:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "784:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "795:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "780:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "780:18:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "800:2:18",
                        "type": "",
                        "value": "19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "773:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "773:30:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "773:30:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "823:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "834:2:18",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "819:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "819:18:18"
                      },
                      {
                        "hexValue": "417574686f72697a6174696f6e204572726f72",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "839:21:18",
                        "type": "",
                        "value": "Authorization Error"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "812:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "812:49:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "812:49:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "870:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "882:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "893:2:18",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "878:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "878:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "870:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ec5c0d0e6ae1dff33ee0f153f65ff2684909de39f6a900bcbdbd6ad2e34d73a9__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "710:9:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "724:4:18",
                "type": ""
              }
            ],
            "src": "559:343:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1081:228:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1098:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1109:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1091:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1091:21:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1091:21:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1132:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1143:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1128:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1128:18:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1148:2:18",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1121:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1121:30:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1121:30:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1171:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1182:2:18",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1167:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1167:18:18"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1187:34:18",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1160:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1160:62:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1160:62:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1242:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1253:2:18",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1238:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1238:18:18"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1258:8:18",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1231:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1231:36:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1231:36:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1276:27:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1288:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1299:3:18",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1284:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1284:19:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1276:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1058:9:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1072:4:18",
                "type": ""
              }
            ],
            "src": "907:402:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1488:182:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1505:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1516:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1498:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1498:21:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1498:21:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1539:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1550:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1535:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1535:18:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1555:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1528:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1528:30:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1528:30:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1578:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1589:2:18",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1574:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1574:18:18"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1594:34:18",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1567:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1567:62:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1567:62:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1638:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1650:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1661:2:18",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1646:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1646:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1638:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1465:9:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1479:4:18",
                "type": ""
              }
            ],
            "src": "1314:356:18"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_ec5c0d0e6ae1dff33ee0f153f65ff2684909de39f6a900bcbdbd6ad2e34d73a9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Authorization Error\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 18,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "118:457:8:-:0;;;510:62;;;;;;;;;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;562:1:8;535:16;;:29;;;;;;;;;;;;;;;;;;118:457;;640:96:5;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;118:457:8:-;;;;;;;",
  "deployedSourceMap": "118:457:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;156:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;385:117;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1831:101:0;;;:::i;:::-;;1201:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;156:31:8;;;;;;;;;;;;;:::o;385:117::-;269:7;:5;:7::i;:::-;255:21;;:10;:21;;;:55;;;;294:16;;;;;;;;;;;280:30;;:10;:30;;;255:55;233:124;;;;;;;;;;;;:::i;:::-;;;;;;;;;486:8:::1;467:16;;:27;;;;;;;;;;;;;;;;;;385:117:::0;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1201:85::-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;2081:198::-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;::::0;2161:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;640:96:5:-;693:7;719:10;712:17;;640:96;:::o;14:226:18:-;106:4;148:2;137:9;133:18;125:26;;190:42;182:6;178:55;167:9;160:74;14:226;;;;:::o;245:309::-;304:6;357:2;345:9;336:7;332:23;328:32;325:52;;;373:1;370;363:12;325:52;412:9;399:23;462:42;455:5;451:54;444:5;441:65;431:93;;520:1;517;510:12;431:93;543:5;533:15;;;245:309;;;;:::o;559:343::-;761:2;750:9;743:21;800:2;795;784:9;780:18;773:30;839:21;834:2;823:9;819:18;812:49;724:4;893:2;882:9;878:18;870:26;;559:343;;;:::o;907:402::-;1109:2;1098:9;1091:21;1148:2;1143;1132:9;1128:18;1121:30;1187:34;1182:2;1171:9;1167:18;1160:62;1258:8;1253:2;1242:9;1238:18;1231:36;1072:4;1299:3;1288:9;1284:19;1276:27;;907:402;;;:::o;1314:356::-;1516:2;1505:9;1498:21;1555:2;1550;1539:9;1535:18;1528:30;1594:34;1589:2;1578:9;1574:18;1567:62;1479:4;1661:2;1650:9;1646:18;1638:26;;1314:356;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract GovManager is Ownable {\r\n    address public GovernerContract;\r\n\r\n    modifier onlyOwnerOrGov() {\r\n        require(\r\n            msg.sender == owner() || msg.sender == GovernerContract,\r\n            \"Authorization Error\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    function setGovernerContract(address _address) external onlyOwnerOrGov {\r\n        GovernerContract = _address;\r\n    }\r\n\r\n    constructor() {\r\n        GovernerContract = address(0);\r\n    }\r\n}\r\n",
  "sourcePath": "poolz-helper-v2\\contracts\\GovManager.sol",
  "ast": {
    "absolutePath": "poolz-helper-v2/contracts/GovManager.sol",
    "exportedSymbols": {
      "Context": [
        931
      ],
      "GovManager": [
        1362
      ],
      "Ownable": [
        112
      ]
    },
    "id": 1363,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1315,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:8"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 1316,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1363,
        "sourceUnit": 113,
        "src": "62:52:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1317,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 112,
              "src": "141:7:8"
            },
            "id": 1318,
            "nodeType": "InheritanceSpecifier",
            "src": "141:7:8"
          }
        ],
        "canonicalName": "GovManager",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1362,
        "linearizedBaseContracts": [
          1362,
          112,
          931
        ],
        "name": "GovManager",
        "nameLocation": "127:10:8",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "0cd8e965",
            "id": 1320,
            "mutability": "mutable",
            "name": "GovernerContract",
            "nameLocation": "171:16:8",
            "nodeType": "VariableDeclaration",
            "scope": 1362,
            "src": "156:31:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1319,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "156:7:8",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1337,
              "nodeType": "Block",
              "src": "222:155:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1323,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "255:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1324,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "255:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1325,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40,
                              "src": "269:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 1326,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "269:7:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "255:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1328,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "280:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1329,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "280:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1330,
                            "name": "GovernerContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1320,
                            "src": "294:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "280:30:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "255:55:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "417574686f72697a6174696f6e204572726f72",
                        "id": 1333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "325:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ec5c0d0e6ae1dff33ee0f153f65ff2684909de39f6a900bcbdbd6ad2e34d73a9",
                          "typeString": "literal_string \"Authorization Error\""
                        },
                        "value": "Authorization Error"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ec5c0d0e6ae1dff33ee0f153f65ff2684909de39f6a900bcbdbd6ad2e34d73a9",
                          "typeString": "literal_string \"Authorization Error\""
                        }
                      ],
                      "id": 1322,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "233:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "233:124:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1335,
                  "nodeType": "ExpressionStatement",
                  "src": "233:124:8"
                },
                {
                  "id": 1336,
                  "nodeType": "PlaceholderStatement",
                  "src": "368:1:8"
                }
              ]
            },
            "id": 1338,
            "name": "onlyOwnerOrGov",
            "nameLocation": "205:14:8",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1321,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "219:2:8"
            },
            "src": "196:181:8",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1349,
              "nodeType": "Block",
              "src": "456:46:8",
              "statements": [
                {
                  "expression": {
                    "id": 1347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1345,
                      "name": "GovernerContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1320,
                      "src": "467:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1346,
                      "name": "_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1340,
                      "src": "486:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "467:27:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1348,
                  "nodeType": "ExpressionStatement",
                  "src": "467:27:8"
                }
              ]
            },
            "functionSelector": "66818967",
            "id": 1350,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1343,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1342,
                  "name": "onlyOwnerOrGov",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1338,
                  "src": "441:14:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "441:14:8"
              }
            ],
            "name": "setGovernerContract",
            "nameLocation": "394:19:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1341,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1340,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "422:8:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1350,
                  "src": "414:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1339,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "414:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "413:18:8"
            },
            "returnParameters": {
              "id": 1344,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "456:0:8"
            },
            "scope": 1362,
            "src": "385:117:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1360,
              "nodeType": "Block",
              "src": "524:48:8",
              "statements": [
                {
                  "expression": {
                    "id": 1358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1353,
                      "name": "GovernerContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1320,
                      "src": "535:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1356,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "562:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1355,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "554:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1354,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "554:7:8",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1357,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "554:10:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "535:29:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1359,
                  "nodeType": "ExpressionStatement",
                  "src": "535:29:8"
                }
              ]
            },
            "id": 1361,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1351,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "521:2:8"
            },
            "returnParameters": {
              "id": 1352,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "524:0:8"
            },
            "scope": 1362,
            "src": "510:62:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1363,
        "src": "118:457:8",
        "usedErrors": []
      }
    ],
    "src": "35:542:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.15+commit.e14f2714.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.8",
  "updatedAt": "2022-07-13T10:38:20.955Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}